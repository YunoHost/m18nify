#!/usr/bin/env python

import os
import sys
import json
from redbaron import RedBaron

def m18nify_file(file_path):
    en_json = json.load(open("../../locales/en.json", "r"))
    content = open(file_path).read()
    red = RedBaron(content)

    content = content.split("\n")

    for string in red("string", lambda x: getattr(x.parent, "type", None) in ("call_argument", "atomtrailers")):
        line = string.absolute_bounding_box.top_left.line

        print
        print

        to_display = content[line - 2:line + 1]
        print "Enter a key to make the string %s translatable" % repr(string)
        print "[%s]" % (line - 1), "   " + to_display[0]
        print "[%s]" % line, "-->" + to_display[1]
        print "[%s]" % (line + 1), "   " + to_display[2]
        print
        try:
            result = raw_input("Key (or nothing to skip or 'q' to quit): ")
            if not result.strip():
                continue
        except EOFError:
            print
            continue

        if result.strip().lower() == "q":
            print
            break

        en_json[result] = string.to_python()

        string.replace("m18n.n('%s')" % result)

    open(file_path, "w").write(red.dumps())
    en_json = json.dumps(en_json, indent=4, sort_keys=True)
    en_json = "\n".join(map(lambda x: x.rstrip(), en_json.split("\n")))
    open("../../locales/en.json", "w").write(en_json)



if __name__ == '__main__':
    files = sys.argv[1:]

    for f in files:
        if not os.path.exists(f):
            print "Error, file '%s' doesn't exists, abort" % f
            sys.exit(0)


    for f in files:
        try:
            m18nify_file(f)
            os.system("git diff")
        except KeyboardInterrupt:
            print
